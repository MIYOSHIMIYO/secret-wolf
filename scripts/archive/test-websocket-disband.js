#!/usr/bin/env node

/**
 * WebSocketËß£Êï£Ê©üËÉΩ„ÅÆ„ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà
 */

const WebSocket = require('ws');

const WS_URL = 'ws://localhost:8787/ws/room/TEST123';

console.log('üîç WebSocketËß£Êï£Ê©üËÉΩ„ÅÆ„ÉÜ„Çπ„Éà„ÇíÈñãÂßã„Åó„Åæ„Åô...');
console.log('Êé•Á∂öÂÖà:', WS_URL);

const ws = new WebSocket(WS_URL);

ws.on('open', () => {
  console.log('‚úÖ WebSocketÊé•Á∂öÊàêÂäü');
  
  // 1. „É´„Éº„É†„Å´ÂèÇÂä†
  console.log('üìù „É´„Éº„É†„Å´ÂèÇÂä†‰∏≠...');
  ws.send(JSON.stringify({
    t: 'join',
    p: {
      roomId: 'TEST123',
      nick: '„ÉÜ„Çπ„Éà„É¶„Éº„Ç∂„Éº',
      installId: 'test-install-id'
    }
  }));
  
  // 2. Â∞ë„ÅóÂæÖ„Å£„Å¶„Åã„ÇâËß£Êï£„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°
  setTimeout(() => {
    console.log('üö™ „É´„Éº„É†Ëß£Êï£„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°‰∏≠...');
    ws.send(JSON.stringify({
      t: 'disband',
      p: {}
    }));
  }, 2000);
});

ws.on('message', (data) => {
  try {
    const message = JSON.parse(data.toString());
    console.log('üì® „É°„ÉÉ„Çª„Éº„Ç∏Âèó‰ø°:', message);
    
    if (message.t === 'disband') {
      console.log('‚úÖ Ëß£Êï£„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü');
    }
    
    if (message.t === 'abort') {
      console.log('‚úÖ ‰∏≠Êñ≠„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂèó‰ø°„Åó„Åæ„Åó„Åü:', message.p);
    }
  } catch (error) {
    console.error('‚ùå „É°„ÉÉ„Çª„Éº„Ç∏Ëß£Êûê„Ç®„É©„Éº:', error);
  }
});

ws.on('error', (error) => {
  console.error('‚ùå WebSocket„Ç®„É©„Éº:', error);
});

ws.on('close', (code, reason) => {
  console.log(`üîå WebSocketÊé•Á∂öÁµÇ‰∫Ü: code=${code}, reason=${reason}`);
  
  if (code === 4000 && reason === 'disbanded') {
    console.log('‚úÖ Ëß£Êï£„Å´„Çà„ÇãÊ≠£Â∏∏„Å™Êé•Á∂öÁµÇ‰∫Ü„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åó„Åü');
  } else {
    console.log('‚ö†Ô∏è  ‰∫àÊúü„Åó„Å™„ÅÑÊé•Á∂öÁµÇ‰∫Ü„Åß„Åô');
  }
  
  process.exit(0);
});

// „Çø„Ç§„É†„Ç¢„Ç¶„ÉàË®≠ÂÆö
setTimeout(() => {
  console.log('‚è∞ „ÉÜ„Çπ„Éà„Çø„Ç§„É†„Ç¢„Ç¶„Éà');
  ws.close();
  process.exit(1);
}, 10000);
